---
- name: Deploy Travel App Workload
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Display setup message
      debug:
        msg: "This playbook sets up the Travel App workload"

    ###############################################
    # Create required projects
    ###############################################
    - name: Create travel-agency project
      shell:
        cmd: oc new-project travel-agency --skip-config-write=true || true
      register: travel_agency_project

    - name: Create travel-portal project
      shell:
        cmd: oc new-project travel-portal --skip-config-write=true || true
      register: travel_portal_project

    - name: Create travel-control project
      shell:
        cmd: oc new-project travel-control --skip-config-write=true || true
      register: travel_control_project

    ###############################################
    # Enable istio-injection for all namespaces
    ###############################################
    - name: Enable istio-injection for travel-agency namespace
      shell:
        cmd: kubectl label namespace travel-agency istio-injection=enabled --overwrite
      register: label_agency_result

    - name: Enable istio-injection for travel-portal namespace
      shell:
        cmd: kubectl label namespace travel-portal istio-injection=enabled --overwrite
      register: label_portal_result

    - name: Enable istio-injection for travel-control namespace
      shell:
        cmd: kubectl label namespace travel-control istio-injection=enabled --overwrite
      register: label_control_result

    ###############################################
    # Apply pod monitors to all namespaces
    ###############################################
    - name: Apply pod monitor to travel-agency namespace
      k8s:
        state: present
        src: ../resources/Monitoring/podMonitor.yaml
        namespace: travel-agency

    - name: Apply pod monitor to travel-control namespace
      k8s:
        state: present
        src: ../resources/Monitoring/podMonitor.yaml
        namespace: travel-control

    - name: Apply pod monitor to travel-portal namespace
      k8s:
        state: present
        src: ../resources/Monitoring/podMonitor.yaml
        namespace: travel-portal

    ###############################################
    # Deploy travel applications
    ###############################################
    - name: Deploy travel-agency application
      shell:
        cmd: oc apply -n travel-agency -f https://raw.githubusercontent.com/redhat-servicemesh-apim-demo/demos/main/travels/travel_agency.yaml
      register: travel_agency_deploy

    - name: Deploy travel-portal application
      shell:
        cmd: oc apply -n travel-portal -f https://raw.githubusercontent.com/redhat-servicemesh-apim-demo/demos/main/travels/travel_portal.yaml
      register: travel_portal_deploy

    - name: Deploy travel-control application
      shell:
        cmd: oc apply -n travel-control -f https://raw.githubusercontent.com/redhat-servicemesh-apim-demo/demos/main/travels/travel_control.yaml
      register: travel_control_deploy

    ###############################################
    # Wait for deployments to be ready
    ###############################################
    - name: Wait for travel-agency pods to be ready
      shell:
        cmd: oc wait --for=condition=Ready pods --all -n travel-agency --timeout=180s
      register: travel_agency_ready
      ignore_errors: true

    - name: Wait for travel-portal pods to be ready
      shell:
        cmd: oc wait --for=condition=Ready pods --all -n travel-portal --timeout=180s
      register: travel_portal_ready
      ignore_errors: true

    - name: Wait for travel-control pods to be ready
      shell:
        cmd: oc wait --for=condition=Ready pods --all -n travel-control --timeout=180s
      register: travel_control_ready
      ignore_errors: true

    ###############################################
    # Display status information
    ###############################################
    - name: Display travel-agency pods
      shell:
        cmd: oc get pods -n travel-agency
      register: travel_agency_pods

    - name: Display travel-agency pods status
      debug:
        var: travel_agency_pods.stdout_lines

    - name: Display travel-portal pods
      shell:
        cmd: oc get pods -n travel-portal
      register: travel_portal_pods

    - name: Display travel-portal pods status
      debug:
        var: travel_portal_pods.stdout_lines

    - name: Display travel-control pods
      shell:
        cmd: oc get pods -n travel-control
      register: travel_control_pods

    - name: Display travel-control pods status
      debug:
        var: travel_control_pods.stdout_lines

    - name: Display completion message
      debug:
        msg: "Travel App workload has been deployed successfully"